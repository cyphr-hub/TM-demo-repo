  pipeline {
	agent any
	parameters {
		booleanParam(name: 'ValidateThreats', defaultValue: false, description: 'Perform ThreatModeler Threats Validation.')
	}
	stages {
    
    
        stage('Building Pilot App') {
            steps {
                sh 'exit 0'
            }
        }
        
        stage('Threat Model Approval Validation') {
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {    
                sh '''#!/bin/bash -l
                response=$(python3 TM.py "nikhsehgal@deloitte.com" "Containers@765" "TM pipeline")
                echo $response
                
                successful="ThreatModeler Approval Validation Successful."
                
                 if [[ $response == $successful ]]
                 then
                    exit 0
                 else 
                    exit 1
                 fi
                '''
                }
            }
        }
                
		stage("TM Threats Validations"){
			when{
				expression {
					params.ValidateThreats
				}
			}
			steps {
	       catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') { 
	         //withCredentials([
		 //usernamePassword(credentials: 'TMcreds', usernameVariable: USER, passwordVariable: PWD)
		 //])
		 
		 //{
		 
                  sh '''#!/bin/bash -l
                  threatresponse=$(python3 TMthreats.py "nikhsehgal@deloitte.com" "Containers@765" "2077")
                  echo $threatresponse
                
                successful="No Threats Detected in ThreatModeler"
                
                 if [[ $threatresponse == $successful ]]
                 then
                    exit 0
                 else 
                    exit 1
                 fi
                '''
                }
		}	
					
			//}	
		}
	
      stage('Push') {
            steps {
                sh 'exit 0'
            }
        }
    
    }
} 
